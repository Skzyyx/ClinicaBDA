/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BO.MedicoBO;
import DTO.MedicoViejoDTO;
import Exception.NegocioException;
import configuracion.DependencyInjector;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import sesion.SessionManager;

/**
 *
 * @author j_ama
 */
public class PrincipalMedico extends javax.swing.JFrame {
    private MedicoBO medicoBO = DependencyInjector.crearMedicoBO();
    
    private static PrincipalMedico instance;
    
    private InicioDeSesion iniciarSesionFrame;
    private VerPerfilMedico perfilMedicoFrame;
    
    /**
     * Creates new form InicioDeSesion
     */
    public PrincipalMedico() throws NegocioException {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Médico - Menú principal");
        mostrarDatosMedico();
        cambiarBotonEstado();
    }
    
    public static PrincipalMedico getInstance() throws NegocioException {
         if (instance == null) {
            instance = new PrincipalMedico();
        }
        return instance;
    }

    public InicioDeSesion getIniciarSesionFrame() {
        return iniciarSesionFrame;
    }

    public void setIniciarSesionFrame(InicioDeSesion iniciarSesionFrame) {
        this.iniciarSesionFrame = iniciarSesionFrame;
    }

    public VerPerfilMedico getPerfilMedicoFrame() {
        return perfilMedicoFrame;
    }

    public void setPerfilMedicoFrame(VerPerfilMedico perfilMedicoFrame) {
        this.perfilMedicoFrame = perfilMedicoFrame;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnVerAgenda = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lbEstado = new javax.swing.JLabel();
        lbNombre = new javax.swing.JLabel();
        iconMedico = new javax.swing.JLabel();
        btnVerPerfil = new javax.swing.JButton();
        fondoCredencial = new javax.swing.JLabel();
        btnHistorial = new javax.swing.JButton();
        btnCambiarEstado = new javax.swing.JButton();
        btnCerrarSesion = new javax.swing.JButton();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(210, 222, 230));
        jPanel1.setMaximumSize(new java.awt.Dimension(800, 600));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        jLabel2.setFont(new java.awt.Font("Montserrat", 0, 36)); // NOI18N
        jLabel2.setText("Menú principal");

        btnVerAgenda.setBackground(new java.awt.Color(0, 0, 0));
        btnVerAgenda.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        btnVerAgenda.setForeground(new java.awt.Color(255, 255, 255));
        btnVerAgenda.setText("Ver mi agenda");
        btnVerAgenda.setPreferredSize(new java.awt.Dimension(150, 30));
        btnVerAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerAgendaActionPerformed(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbEstado.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
        lbEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(lbEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 220, 30));

        lbNombre.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        lbNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(lbNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 220, 30));

        iconMedico.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        iconMedico.setIcon(new ImageIcon(getClass().getResource("/iconPaciente.JPG")));
        jPanel2.add(iconMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 100, 90));

        btnVerPerfil.setBackground(new java.awt.Color(0, 0, 0));
        btnVerPerfil.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        btnVerPerfil.setForeground(new java.awt.Color(255, 255, 255));
        btnVerPerfil.setText("Ver perfil");
        btnVerPerfil.setPreferredSize(new java.awt.Dimension(150, 30));
        btnVerPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerPerfilActionPerformed(evt);
            }
        });
        jPanel2.add(btnVerPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 150, 58));

        fondoCredencial.setIcon(new ImageIcon(getClass().getResource("/fondoCredencial.JPG")));
        jPanel2.add(fondoCredencial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 290));

        btnHistorial.setBackground(new java.awt.Color(0, 0, 0));
        btnHistorial.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        btnHistorial.setForeground(new java.awt.Color(255, 255, 255));
        btnHistorial.setText("Consultar historial");
        btnHistorial.setPreferredSize(new java.awt.Dimension(150, 30));
        btnHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistorialActionPerformed(evt);
            }
        });

        btnCambiarEstado.setBackground(new java.awt.Color(0, 0, 0));
        btnCambiarEstado.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        btnCambiarEstado.setForeground(new java.awt.Color(255, 255, 255));
        btnCambiarEstado.setText("Darse de baja/alta");
        btnCambiarEstado.setPreferredSize(new java.awt.Dimension(150, 30));
        btnCambiarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarEstadoActionPerformed(evt);
            }
        });

        btnCerrarSesion.setBackground(new java.awt.Color(0, 0, 0));
        btnCerrarSesion.setFont(new java.awt.Font("Montserrat", 0, 18)); // NOI18N
        btnCerrarSesion.setForeground(new java.awt.Color(255, 255, 255));
        btnCerrarSesion.setText("Cerrar sesión");
        btnCerrarSesion.setPreferredSize(new java.awt.Dimension(150, 30));
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(253, 253, 253))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnHistorial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCambiarEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnVerAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(100, 100, 100))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel2)
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVerAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCambiarEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerAgendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVerAgendaActionPerformed

    private void btnVerPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerPerfilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVerPerfilActionPerformed

    private void btnHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistorialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHistorialActionPerformed

    private void btnCambiarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarEstadoActionPerformed
        try {
            cambiarEstado();
        } catch (NegocioException ex) {
            Logger.getLogger(PrincipalMedico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCambiarEstadoActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        cerrarSesion();
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalMedico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PrincipalMedico().setVisible(true);
                } catch (NegocioException ex) {
                    Logger.getLogger(PrincipalMedico.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCambiarEstado;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnHistorial;
    private javax.swing.JButton btnVerAgenda;
    private javax.swing.JButton btnVerPerfil;
    private javax.swing.JLabel fondoCredencial;
    private javax.swing.JLabel iconMedico;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbEstado;
    private javax.swing.JLabel lbNombre;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Muestra los datos del médico en la credencial
     * @throws NegocioException 
     */
    private void mostrarDatosMedico() throws NegocioException {
        MedicoViejoDTO medico = medicoBO.obtenerMedicoPorCedula(SessionManager.getInstance().getUser());
        
        if (medico != null) {
            lbNombre.setText(medico.getNombre());
            lbEstado.setText(medico.getEstado());
        } else {
            JOptionPane.showMessageDialog(this, "Ocurrió un error interno. Se ha cerrado la sesión.", "Error", JOptionPane.ERROR_MESSAGE);
            cerrarSesion();
        }
    }
    
    private void cambiarBotonEstado() throws NegocioException {
        MedicoViejoDTO medico = medicoBO.obtenerMedicoPorCedula(SessionManager.getInstance().getUser());
        
        if (medico != null && medico.getEstado() != null) {
            switch (medico.getEstado().toUpperCase()) {
                case "ACTIVO" -> {
                    btnCambiarEstado.setBackground(Color.red);
                    btnCambiarEstado.setText("Darse de baja temporal");
                }
                case "INACTIVO" -> {
                    btnCambiarEstado.setBackground(Color.green);
                    btnCambiarEstado.setText("Darse de alta");
                }
                default ->
                    JOptionPane.showMessageDialog(this, "Tu estado no es válido. Intentalo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            mostrarDatosMedico();
        } else {
            JOptionPane.showMessageDialog(this, "Ocurrió un error interno. Se ha cerrado la sesión", "Error", JOptionPane.ERROR_MESSAGE);
            cerrarSesion();
        }
    }
    
    /**
     * Inicia el proceso para cambiar el estado de un médico.
     * @throws NegocioException Si hubo un error en el proceso.
     */
    private void cambiarEstado() throws NegocioException {
        MedicoViejoDTO medico = medicoBO.obtenerMedicoPorCedula(SessionManager.getInstance().getUser());
        
        if (medico != null && medico.getEstado() != null) {
            switch (medico.getEstado().toUpperCase()) {
                case "ACTIVO" -> {
                    darseDeBaja();
                }
                case "INACTIVO" -> {
                    darseDeAlta();
                }
                default ->
                    JOptionPane.showMessageDialog(this, "Tu estado no es válido. Intentalo de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            cambiarBotonEstado();
        } else {
            JOptionPane.showMessageDialog(this, "Ocurrió un error interno. Se ha cerrado la sesión", "Error", JOptionPane.ERROR_MESSAGE);
            cerrarSesion();
        }
    }
    
    /**
     * Inicia el proceso para dar de baja temporal a un médico.
     * @throws NegocioException Si hubo un error en el proceso.
     */
    private void darseDeBaja() throws NegocioException {
        String cedula = SessionManager.getInstance().getUser();
        try {
            boolean bajaValida = medicoBO.validarBaja(cedula);
            
            if (bajaValida) {
                int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas date de baja temporalmente?", "Mensaje de confirmación", JOptionPane.YES_NO_OPTION);

                if (confirmacion == JOptionPane.YES_OPTION) {
                    try {
                        boolean baja = medicoBO.darseDeBaja(cedula);
                        if (baja) {
                            JOptionPane.showMessageDialog(this, "Tu baja temporal ha sido confirmada.");
                        } else {
                            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al realizar la baja.");
                        }
                    } catch (NegocioException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Se ha cancelado la baja temporal.");
                }
            }
        } catch (NegocioException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * Inicia el proceso para dar de alta a un médico.
     * @throws NegocioException Si hubo un error en el proceso.
     */
    private void darseDeAlta() throws NegocioException {
        int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas date de alta?", "Mensaje de confirmación", JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                boolean alta = medicoBO.darseDeAlta(SessionManager.getInstance().getUser());
                if (alta) {
                    JOptionPane.showMessageDialog(this, "Tu alta ha sido confirmada.");
                } else {
                    JOptionPane.showMessageDialog(this, "Ha ocurrido un error al realizar el alta.");
                }
            } catch (NegocioException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Se ha cancelado el alta.");
        }
    }
    
    /**
     * Cierra la sesión del usuario y la aplicación.
     */
    private void cerrarSesion() {
        SessionManager.getInstance().cerrarSesion();
        System.exit(0);
    }
}